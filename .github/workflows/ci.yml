# Copyright (c) 2004-present Facebook All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Run linters
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: v1.48.0
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.18', '1.19']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: go test -race ./...
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-node@v2
      - run: npm install @actions/tool-cache
      - name: install protoc
        uses: actions/github-script@v6
        with:
          script: |
            const tc = require('@actions/tool-cache')
            const p = await tc.downloadTool('https://github.com/protocolbuffers/protobuf/releases/download/v21.9/protoc-21.9-linux-x86_64.zip')
            const d = await tc.extractZip(p, 'protoc');
            core.addPath(d)
      - name: Install protoc plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0
      - name: Install protoc-gen-entgrpc
        working-directory: entproto/cmd/protoc-gen-entgrpc
        run: go install
      - name: Install protoc-gen-ent
        working-directory: entproto/cmd/protoc-gen-ent
        run: go install
      - name: Run go generate
        run: go generate ./...
      - name: Check generated files
        run: |
          status=$(git status --porcelain | grep -v "go.\(sum\|mod\)" | cat)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            git diff
            exit 1
          fi
