# Copyright (c) 2004-present Facebook All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3      
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Run linters
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          version: v1.45.2
          args: --timeout 3m
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goversion: [1.18, 1.17]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: go test -race ./...
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: arduino/setup-protoc@v1
        with:
          version: v3.19.4
      - name: Install protoc plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0
      - name: Install protoc-gen-entgrpc
        working-directory: entproto/cmd/protoc-gen-entgrpc
        run: go install
      - name: Install protoc-gen-ent
        working-directory: entproto/cmd/protoc-gen-ent
        run: go install
      - name: Run go generate
        run: go generate ./...
      - name: Check generated files
        run: |
          status=$(git status --porcelain | grep -v "go.\(sum\|mod\)" | cat)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            git diff
            exit 1
          fi
