// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OasTypesColumns holds the columns for the "oas_types" table.
	OasTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "int", Type: field.TypeInt},
		{Name: "int8", Type: field.TypeInt8},
		{Name: "int16", Type: field.TypeInt16},
		{Name: "int32", Type: field.TypeInt32},
		{Name: "int64", Type: field.TypeInt64},
		{Name: "uint", Type: field.TypeUint},
		{Name: "uint8", Type: field.TypeUint8},
		{Name: "uint16", Type: field.TypeUint16},
		{Name: "uint32", Type: field.TypeUint32},
		{Name: "uint64", Type: field.TypeUint64},
		{Name: "float32", Type: field.TypeFloat32},
		{Name: "float64", Type: field.TypeFloat64},
		{Name: "string_field", Type: field.TypeString},
		{Name: "bool", Type: field.TypeBool},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "time", Type: field.TypeTime},
		{Name: "text", Type: field.TypeString, Size: 2147483647},
		{Name: "state", Type: field.TypeEnum, Enums: []string{"on", "off"}},
		{Name: "strings", Type: field.TypeJSON},
		{Name: "ints", Type: field.TypeJSON},
		{Name: "floats", Type: field.TypeJSON},
		{Name: "bytes", Type: field.TypeBytes},
		{Name: "nicknames", Type: field.TypeJSON},
		{Name: "json_slice", Type: field.TypeJSON},
		{Name: "json_obj", Type: field.TypeJSON},
		{Name: "other", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "varchar"}},
		{Name: "optional", Type: field.TypeInt, Nullable: true},
		{Name: "nillable", Type: field.TypeInt},
		{Name: "optional_and_nillable", Type: field.TypeInt, Nullable: true},
	}
	// OasTypesTable holds the schema information for the "oas_types" table.
	OasTypesTable = &schema.Table{
		Name:       "oas_types",
		Columns:    OasTypesColumns,
		PrimaryKey: []*schema.Column{OasTypesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OasTypesTable,
	}
)

func init() {
}
