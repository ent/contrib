// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package todopulid

import (
	"time"

	"entgo.io/contrib/entgql/internal/todopulid/ent"
	"entgo.io/contrib/entgql/internal/todopulid/ent/schema/pulid"
)

type Project struct {
	ID    pulid.ID            `json:"id"`
	Todos *ent.TodoConnection `json:"todos"`
}

func (Project) IsNode() {}

// ProjectWhereInput is used for filtering Project objects.
// Input was generated by ent.
type ProjectWhereInput struct {
	Not *ProjectWhereInput   `json:"not"`
	And []*ProjectWhereInput `json:"and"`
	Or  []*ProjectWhereInput `json:"or"`
	// id field predicates
	ID      *pulid.ID  `json:"id"`
	IDNeq   *pulid.ID  `json:"idNEQ"`
	IDIn    []pulid.ID `json:"idIn"`
	IDNotIn []pulid.ID `json:"idNotIn"`
	IDGt    *pulid.ID  `json:"idGT"`
	IDGte   *pulid.ID  `json:"idGTE"`
	IDLt    *pulid.ID  `json:"idLT"`
	IDLte   *pulid.ID  `json:"idLTE"`
	// todos edge predicates
	HasTodos     *bool                 `json:"hasTodos"`
	HasTodosWith []*ent.TodoWhereInput `json:"hasTodosWith"`
}

// UpdateFriendshipInput is used for update Friendship object.
// Input was generated by ent.
type UpdateFriendshipInput struct {
	CreatedAt *time.Time `json:"createdAt"`
	UserID    *pulid.ID  `json:"userID"`
	FriendID  *pulid.ID  `json:"friendID"`
}
