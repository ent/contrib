// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package todoplugin

import (
	"time"

	"entgo.io/contrib/entgql/internal/todo/ent/schema/schematype"
	"entgo.io/contrib/entgql/internal/todoplugin/ent/category"
	"entgo.io/contrib/entgql/internal/todoplugin/ent/role"
	"entgo.io/contrib/entgql/internal/todoplugin/ent/todo"
	"github.com/google/uuid"
)

type Entity interface {
	IsEntity()
}

// CategoryWhereInput is used for filtering Category objects.
// Input was generated by ent.
type CategoryWhereInput struct {
	Not *CategoryWhereInput   `json:"not"`
	And []*CategoryWhereInput `json:"and"`
	Or  []*CategoryWhereInput `json:"or"`
	// text field predicates
	Text             *string  `json:"text"`
	TextNeq          *string  `json:"textNEQ"`
	TextIn           []string `json:"textIn"`
	TextNotIn        []string `json:"textNotIn"`
	TextGt           *string  `json:"textGT"`
	TextGte          *string  `json:"textGTE"`
	TextLt           *string  `json:"textLT"`
	TextLte          *string  `json:"textLTE"`
	TextContains     *string  `json:"textContains"`
	TextHasPrefix    *string  `json:"textHasPrefix"`
	TextHasSuffix    *string  `json:"textHasSuffix"`
	TextEqualFold    *string  `json:"textEqualFold"`
	TextContainsFold *string  `json:"textContainsFold"`
	// uuid_a field predicates
	UUIDA       *uuid.UUID  `json:"uuidA"`
	UUIDAneq    *uuid.UUID  `json:"uuidANEQ"`
	UUIDAIn     []uuid.UUID `json:"uuidAIn"`
	UUIDANotIn  []uuid.UUID `json:"uuidANotIn"`
	UUIDAgt     *uuid.UUID  `json:"uuidAGT"`
	UUIDAgte    *uuid.UUID  `json:"uuidAGTE"`
	UUIDAlt     *uuid.UUID  `json:"uuidALT"`
	UUIDAlte    *uuid.UUID  `json:"uuidALTE"`
	UUIDAIsNil  *bool       `json:"uuidAIsNil"`
	UUIDANotNil *bool       `json:"uuidANotNil"`
	// status field predicates
	Status      *category.Status  `json:"status"`
	StatusNeq   *category.Status  `json:"statusNEQ"`
	StatusIn    []category.Status `json:"statusIn"`
	StatusNotIn []category.Status `json:"statusNotIn"`
	// config field predicates
	Config       *schematype.CategoryConfig   `json:"config"`
	ConfigNeq    *schematype.CategoryConfig   `json:"configNEQ"`
	ConfigIn     []*schematype.CategoryConfig `json:"configIn"`
	ConfigNotIn  []*schematype.CategoryConfig `json:"configNotIn"`
	ConfigGt     *schematype.CategoryConfig   `json:"configGT"`
	ConfigGte    *schematype.CategoryConfig   `json:"configGTE"`
	ConfigLt     *schematype.CategoryConfig   `json:"configLT"`
	ConfigLte    *schematype.CategoryConfig   `json:"configLTE"`
	ConfigIsNil  *bool                        `json:"configIsNil"`
	ConfigNotNil *bool                        `json:"configNotNil"`
	// duration field predicates
	Duration       *time.Duration  `json:"duration"`
	DurationNeq    *time.Duration  `json:"durationNEQ"`
	DurationIn     []time.Duration `json:"durationIn"`
	DurationNotIn  []time.Duration `json:"durationNotIn"`
	DurationGt     *time.Duration  `json:"durationGT"`
	DurationGte    *time.Duration  `json:"durationGTE"`
	DurationLt     *time.Duration  `json:"durationLT"`
	DurationLte    *time.Duration  `json:"durationLTE"`
	DurationIsNil  *bool           `json:"durationIsNil"`
	DurationNotNil *bool           `json:"durationNotNil"`
	// count field predicates
	Count       *uint64  `json:"count"`
	CountNeq    *uint64  `json:"countNEQ"`
	CountIn     []uint64 `json:"countIn"`
	CountNotIn  []uint64 `json:"countNotIn"`
	CountGt     *uint64  `json:"countGT"`
	CountGte    *uint64  `json:"countGTE"`
	CountLt     *uint64  `json:"countLT"`
	CountLte    *uint64  `json:"countLTE"`
	CountIsNil  *bool    `json:"countIsNil"`
	CountNotNil *bool    `json:"countNotNil"`
	// id field predicates
	ID      *int  `json:"id"`
	IDNeq   *int  `json:"idNEQ"`
	IDIn    []int `json:"idIn"`
	IDNotIn []int `json:"idNotIn"`
	IDGt    *int  `json:"idGT"`
	IDGte   *int  `json:"idGTE"`
	IDLt    *int  `json:"idLT"`
	IDLte   *int  `json:"idLTE"`
	// todos edge predicates
	HasTodos     *bool             `json:"hasTodos"`
	HasTodosWith []*TodoWhereInput `json:"hasTodosWith"`
}

type TodoInput struct {
	Status     todo.Status `json:"status"`
	Priority   *int        `json:"priority"`
	Text       string      `json:"text"`
	Parent     *int        `json:"parent"`
	CategoryID *int        `json:"category_id"`
}

// TodoWhereInput is used for filtering Todo objects.
// Input was generated by ent.
type TodoWhereInput struct {
	Not *TodoWhereInput   `json:"not"`
	And []*TodoWhereInput `json:"and"`
	Or  []*TodoWhereInput `json:"or"`
	// created_at field predicates
	CreatedAt      *time.Time   `json:"createdAt"`
	CreatedAtNeq   *time.Time   `json:"createdAtNEQ"`
	CreatedAtIn    []*time.Time `json:"createdAtIn"`
	CreatedAtNotIn []*time.Time `json:"createdAtNotIn"`
	CreatedAtGt    *time.Time   `json:"createdAtGT"`
	CreatedAtGte   *time.Time   `json:"createdAtGTE"`
	CreatedAtLt    *time.Time   `json:"createdAtLT"`
	CreatedAtLte   *time.Time   `json:"createdAtLTE"`
	// visibility_status field predicates
	VisibilityStatus      *todo.VisibilityStatus  `json:"visibilityStatus"`
	VisibilityStatusNeq   *todo.VisibilityStatus  `json:"visibilityStatusNEQ"`
	VisibilityStatusIn    []todo.VisibilityStatus `json:"visibilityStatusIn"`
	VisibilityStatusNotIn []todo.VisibilityStatus `json:"visibilityStatusNotIn"`
	// status field predicates
	Status      *todo.Status  `json:"status"`
	StatusNeq   *todo.Status  `json:"statusNEQ"`
	StatusIn    []todo.Status `json:"statusIn"`
	StatusNotIn []todo.Status `json:"statusNotIn"`
	// priority field predicates
	Priority      *int  `json:"priority"`
	PriorityNeq   *int  `json:"priorityNEQ"`
	PriorityIn    []int `json:"priorityIn"`
	PriorityNotIn []int `json:"priorityNotIn"`
	PriorityGt    *int  `json:"priorityGT"`
	PriorityGte   *int  `json:"priorityGTE"`
	PriorityLt    *int  `json:"priorityLT"`
	PriorityLte   *int  `json:"priorityLTE"`
	// text field predicates
	Text             *string  `json:"text"`
	TextNeq          *string  `json:"textNEQ"`
	TextIn           []string `json:"textIn"`
	TextNotIn        []string `json:"textNotIn"`
	TextGt           *string  `json:"textGT"`
	TextGte          *string  `json:"textGTE"`
	TextLt           *string  `json:"textLT"`
	TextLte          *string  `json:"textLTE"`
	TextContains     *string  `json:"textContains"`
	TextHasPrefix    *string  `json:"textHasPrefix"`
	TextHasSuffix    *string  `json:"textHasSuffix"`
	TextEqualFold    *string  `json:"textEqualFold"`
	TextContainsFold *string  `json:"textContainsFold"`
	// id field predicates
	ID      *int  `json:"id"`
	IDNeq   *int  `json:"idNEQ"`
	IDIn    []int `json:"idIn"`
	IDNotIn []int `json:"idNotIn"`
	IDGt    *int  `json:"idGT"`
	IDGte   *int  `json:"idGTE"`
	IDLt    *int  `json:"idLT"`
	IDLte   *int  `json:"idLTE"`
	// parent edge predicates
	HasParent     *bool             `json:"hasParent"`
	HasParentWith []*TodoWhereInput `json:"hasParentWith"`
	// children edge predicates
	HasChildren     *bool             `json:"hasChildren"`
	HasChildrenWith []*TodoWhereInput `json:"hasChildrenWith"`
}

// UserWhereInput is used for filtering User objects.
// Input was generated by ent.
type UserWhereInput struct {
	Not *UserWhereInput   `json:"not"`
	And []*UserWhereInput `json:"and"`
	Or  []*UserWhereInput `json:"or"`
	// username field predicates
	Username             *string  `json:"username"`
	UsernameNeq          *string  `json:"usernameNEQ"`
	UsernameIn           []string `json:"usernameIn"`
	UsernameNotIn        []string `json:"usernameNotIn"`
	UsernameGt           *string  `json:"usernameGT"`
	UsernameGte          *string  `json:"usernameGTE"`
	UsernameLt           *string  `json:"usernameLT"`
	UsernameLte          *string  `json:"usernameLTE"`
	UsernameContains     *string  `json:"usernameContains"`
	UsernameHasPrefix    *string  `json:"usernameHasPrefix"`
	UsernameHasSuffix    *string  `json:"usernameHasSuffix"`
	UsernameEqualFold    *string  `json:"usernameEqualFold"`
	UsernameContainsFold *string  `json:"usernameContainsFold"`
	// age field predicates
	Age      *float64  `json:"age"`
	AgeNeq   *float64  `json:"ageNEQ"`
	AgeIn    []float64 `json:"ageIn"`
	AgeNotIn []float64 `json:"ageNotIn"`
	AgeGt    *float64  `json:"ageGT"`
	AgeGte   *float64  `json:"ageGTE"`
	AgeLt    *float64  `json:"ageLT"`
	AgeLte   *float64  `json:"ageLTE"`
	// amount field predicates
	Amount      *float64  `json:"amount"`
	AmountNeq   *float64  `json:"amountNEQ"`
	AmountIn    []float64 `json:"amountIn"`
	AmountNotIn []float64 `json:"amountNotIn"`
	AmountGt    *float64  `json:"amountGT"`
	AmountGte   *float64  `json:"amountGTE"`
	AmountLt    *float64  `json:"amountLT"`
	AmountLte   *float64  `json:"amountLTE"`
	// role field predicates
	Role      *role.Role  `json:"role"`
	RoleNeq   *role.Role  `json:"roleNEQ"`
	RoleIn    []role.Role `json:"roleIn"`
	RoleNotIn []role.Role `json:"roleNotIn"`
	// nullable_string field predicates
	NullableString             *string  `json:"nullableString"`
	NullableStringNeq          *string  `json:"nullableStringNEQ"`
	NullableStringIn           []string `json:"nullableStringIn"`
	NullableStringNotIn        []string `json:"nullableStringNotIn"`
	NullableStringGt           *string  `json:"nullableStringGT"`
	NullableStringGte          *string  `json:"nullableStringGTE"`
	NullableStringLt           *string  `json:"nullableStringLT"`
	NullableStringLte          *string  `json:"nullableStringLTE"`
	NullableStringContains     *string  `json:"nullableStringContains"`
	NullableStringHasPrefix    *string  `json:"nullableStringHasPrefix"`
	NullableStringHasSuffix    *string  `json:"nullableStringHasSuffix"`
	NullableStringIsNil        *bool    `json:"nullableStringIsNil"`
	NullableStringNotNil       *bool    `json:"nullableStringNotNil"`
	NullableStringEqualFold    *string  `json:"nullableStringEqualFold"`
	NullableStringContainsFold *string  `json:"nullableStringContainsFold"`
	// id field predicates
	ID      *int  `json:"id"`
	IDNeq   *int  `json:"idNEQ"`
	IDIn    []int `json:"idIn"`
	IDNotIn []int `json:"idNotIn"`
	IDGt    *int  `json:"idGT"`
	IDGte   *int  `json:"idGTE"`
	IDLt    *int  `json:"idLT"`
	IDLte   *int  `json:"idLTE"`
}
