// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/collection.tmpl
// template/enum.tmpl
// template/node.tmpl
// template/pagination.tmpl
// template/pagination_test.tmpl
// template/transaction.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateCollectionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x5f\x6f\xdb\x36\x10\x7f\x16\x3f\xc5\x4d\xf0\x83\x65\x38\x74\xda\xb7\x64\xf0\x43\x16\xa4\x45\x81\x2e\x43\xd7\x02\x7b\x1c\x68\xf2\x24\x11\xa3\x49\x85\xa4\xd2\x18\x02\xbf\xfb\x40\x8a\xb2\x6c\x37\x1b\x02\x34\x0f\xb1\x78\xf7\xbb\xbb\xdf\xfd\x1d\x86\xcd\x8a\xdc\x9b\xee\x60\x65\xd3\x7a\x78\x7f\xfd\xee\xe6\xaa\xb3\xe8\x50\x7b\xf8\xc0\x38\xee\x8c\xf9\x07\x3e\x69\x4e\xe1\x4e\x29\x48\x20\x07\x51\x6f\x9f\x51\x50\xf2\xad\x95\x0e\x9c\xe9\x2d\x47\xe0\x46\x20\x48\x07\x4a\x72\xd4\x0e\x05\xf4\x5a\xa0\x05\xdf\x22\xdc\x75\x8c\xb7\x08\xef\xe9\xf5\xa4\x85\xda\xf4\x5a\x10\xa9\x93\xfe\xf3\xa7\xfb\x87\xc7\xaf\x0f\x50\x4b\x85\x90\x65\xd6\x18\x0f\x42\x5a\xe4\xde\xd8\x03\x98\x1a\xfc\x49\x30\x6f\x11\x29\x59\x6d\x42\x20\x64\x18\x40\x60\x2d\x35\x42\xc9\x8d\x52\xc8\xbd\x34\xba\x84\x10\xa2\xc6\xe3\xbe\x53\xcc\x23\x94\x2d\x32\x81\xb6\x84\x45\xd4\x10\xb9\xef\x8c\xf5\xb0\x24\x45\xc9\x8d\xf6\xf8\xe2\x4b\x42\x8a\xb2\x91\xbe\xed\x77\x94\x9b\xfd\xe6\xe6\x46\xa0\x93\x8d\x76\x9b\xe6\x49\x35\xa8\x37\x8d\x65\x5d\xfb\xa4\x4a\x52\xa5\x98\x96\xe9\x06\x61\xa1\x63\xda\xb7\x5b\x58\xd0\x47\x23\xd0\x41\x66\xb4\x40\xd1\xa0\x8b\x0a\x21\xb9\xcf\x64\xb2\x49\x54\x25\x93\x68\x4b\x1f\x12\x30\x04\x52\x0c\x03\xc8\x1a\x16\x4c\x6b\xe3\x59\x4c\x22\x81\x22\x9a\xde\x1d\x65\x8e\x3e\x68\xff\xf1\xcb\xe7\x64\xf1\xa3\x09\xfd\x4d\x6a\x31\xea\x5e\x51\xfe\xce\xba\x4e\xea\x06\x42\x18\x06\xa8\x99\x54\x50\xee\x22\x9e\x69\x01\xfb\xac\x9b\xe1\x0e\x98\x45\xd8\xf7\xbe\x67\x4a\x1d\x00\x5f\xb8\xea\x9d\x7c\xc6\x72\xb4\xc7\xd3\x40\x39\xdf\x2d\x38\xf4\xd3\x63\xa4\xfe\xc8\xf6\x08\x4b\x25\x5d\x96\xd3\x6f\x87\xee\x15\x69\x14\x54\xd5\x31\xab\xa3\xf3\x9c\xc4\xc4\x2e\x56\xe4\xd5\x84\x7e\x86\xc7\xe4\xfd\xc7\xf0\xf3\xe7\xfc\x95\xda\x6b\x91\xa3\x7c\x46\x3b\xf7\xf1\xcf\x49\x32\x82\x17\x4f\x3d\xda\xc3\xac\xfe\x12\x9f\x29\x5a\x08\x64\xb3\x81\xfb\x71\x54\x3f\x48\x54\xc2\x81\x47\xa5\x5c\x9a\xfb\x64\x76\xb5\xeb\xa5\x4a\xdb\x63\x00\x59\x83\x56\x1d\x40\x19\x26\x80\x1b\xad\x91\x7b\x14\xa0\xd3\xb4\xed\x0e\x71\x1b\x8d\x8a\x71\xf3\x1c\x53\x52\xf7\x9a\xc3\xf2\x8c\x65\x08\xb0\x9a\x49\x85\x50\x9d\xc7\x5f\x72\xff\x72\xb4\xbf\x1f\x7f\xd7\xe0\x98\x97\xae\x96\xe8\x80\x52\xea\xbc\x4d\x15\x3a\x73\x03\x03\x29\x64\x0d\x35\x8f\x79\xe6\xfd\xa0\x1f\x71\xf4\x9a\xfd\x44\xdf\xd5\xaf\x11\xf3\xcb\x16\xb4\x54\xd1\xa6\xb8\x24\xb7\x85\x0b\x09\xe5\x27\xfc\x96\x27\xae\xff\xe8\xd0\xa6\xde\x9f\xba\x5f\x43\xcd\x69\x82\x9e\xb0\xa6\x94\x56\xa4\x08\xa4\xb0\xe8\x7b\xab\x2f\x23\x90\x40\xde\x56\xa9\x33\x26\xb1\x50\xab\x89\xce\x25\x97\x35\xd4\x11\x74\xac\x44\xae\x31\x8a\x4b\x6a\xff\x5b\xd0\x61\xb8\x82\xef\xd2\xb7\xd3\xf8\xa6\x99\xac\x8d\x85\xbf\x27\xff\xb7\xdb\x7c\x4a\x2e\x02\xcd\xcd\xcc\x48\xfa\x15\xf3\x3d\x74\x27\xd1\xab\xd4\x82\xc2\x7d\x97\x9e\xb7\x19\x98\x26\x33\x89\x53\xfc\xe9\xb8\xb1\x3d\xae\x61\xf1\xcc\x54\x3f\x1e\x33\x9a\x37\xad\x28\x38\x73\x08\xf3\x4d\x93\x13\x2c\xa2\xa4\x16\xf8\x72\x34\x7b\x37\x9e\x0b\x59\x43\xe3\x61\x21\xe1\x1a\x42\x58\xc3\x71\x9f\xca\x98\xff\x68\x3a\x3e\x46\xf1\xed\x18\xe6\x0d\x93\xf2\x97\xf4\xed\x30\x40\xc7\x1c\x67\x6a\xe4\x0c\x21\x2c\x63\x6f\x97\x63\x5d\x57\xb3\x7a\x79\xce\xed\x3a\xae\x7c\x5a\xcd\x5c\x94\xf8\x97\x8c\xe8\x65\xdb\x73\x49\xab\x8c\x0a\xd5\xb1\x58\xf3\x21\x8c\xff\x02\x39\x13\xfe\xf7\xf0\xbd\x76\x5b\xfe\x0d\x00\x00\xff\xff\x0f\x9c\x85\xe3\x90\x07\x00\x00")

func templateCollectionTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateCollectionTmpl,
		"template/collection.tmpl",
	)
}

func templateCollectionTmpl() (*asset, error) {
	bytes, err := templateCollectionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/collection.tmpl", size: 1936, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateEnumTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x51\x4f\xdb\x30\x10\x7e\x4e\x7e\xc5\x11\x15\x29\xa9\xa8\xc3\x78\xdb\xa6\x3e\x30\x54\x18\x12\x9b\x86\x60\xdb\x23\x32\xc9\xb9\xb5\xea\xd8\xdd\xd9\x09\x42\x51\xfe\xfb\x64\x27\x2d\x69\x61\x13\x6f\x6e\xbf\xef\xbe\xfb\xee\xee\x4b\xdb\xe6\xd3\xf8\xc2\x6c\x9e\x49\x2e\x57\x0e\xce\x4e\x3f\x7c\x9c\x6d\x08\x2d\x6a\x07\x97\xbc\xc0\x47\x63\xd6\x70\xad\x0b\x06\xe7\x4a\x41\x20\x59\xf0\x38\x35\x58\xb2\xf8\x7e\x25\x2d\x58\x53\x53\x81\x50\x98\x12\x41\x5a\x50\xb2\x40\x6d\xb1\x84\x5a\x97\x48\xe0\x56\x08\xe7\x1b\x5e\xac\x10\xce\xd8\xe9\x16\x05\x61\x6a\x5d\xc6\x52\x07\xfc\xe6\xfa\x62\xf1\xfd\x6e\x01\x42\x2a\x84\xe1\x3f\x32\xc6\x41\x29\x09\x0b\x67\xe8\x19\x8c\x00\x37\x6a\xe6\x08\x91\xc5\xd3\xbc\xeb\xe2\xb8\x6d\xa1\x44\x21\x35\x42\x52\xa1\xe3\x39\x2f\x4b\xe9\xa4\xd1\x5c\xe5\x4b\xe2\x9b\xd5\x1f\x35\x43\x5d\x57\x09\x0c\x64\xe2\x7a\x89\x30\x11\xf0\x69\x0e\x13\xb6\xd0\x75\x75\x29\x51\x95\xd6\xe3\x51\xdb\xc2\xc4\xb3\x3d\xe8\x48\x56\x3f\x78\xb1\xe6\x81\xce\xee\x9f\x37\xc8\xee\x1c\x49\xbd\x84\x09\xdb\x02\xb3\xbe\x6a\x06\x52\x80\x36\xce\x13\xbf\x72\x7b\x65\x3c\x3b\x28\x06\x49\xc2\x02\x65\x83\xe4\x65\x77\xef\x89\x60\x5f\x6a\xa9\x4a\xa4\x60\xa0\x97\x8a\xf2\x1c\xbe\x71\xb2\x2b\xae\xae\x6e\x6f\x40\x56\x1b\x85\x15\x6a\x67\x61\x18\x86\x0d\x28\x12\x48\xed\x90\x04\x2f\x90\xc5\x51\x24\x6a\x5d\x40\xba\xd7\xac\xeb\x60\x37\x4f\xd7\x65\x23\xdd\xf4\x09\xa4\x61\xbf\x49\x3a\xa4\x0c\xda\x38\x8a\xa2\xed\xef\x7e\xc2\xf4\xe9\x04\xac\xa3\xc2\xe8\x86\xdd\xd6\xc6\xe1\xa1\xf2\xb0\x89\x34\xcb\xb2\x38\x8a\xba\xb8\x77\xfe\x53\x57\xff\xf5\xbe\xc3\xdf\xe7\x7e\xba\x67\x7f\x2c\x9e\x36\x2f\xf5\x6d\x97\x01\x12\x19\xea\x07\xb1\x8e\x4e\xc0\xac\xfd\xaa\x1b\x96\xda\x60\x33\x0b\x13\x0a\x38\x32\xeb\x9e\x14\x11\xba\x9a\x34\x88\xca\xb1\x85\xaf\x15\x69\x12\x1a\x1d\xdf\x43\x55\x5b\x07\x8f\x08\x1c\xfa\xe2\xe4\x04\x9a\x20\xe0\xcf\x13\x4d\x0f\x4d\xce\xc7\x4b\xf6\xfd\xb6\xcd\x90\xc2\xbd\x3d\x2a\xd8\x2f\xae\x64\xc9\x9d\xf1\x25\xe9\xa1\x46\xf6\x39\x90\x8f\xe6\xa0\xa5\xfa\xb7\xc1\x63\xeb\x3f\x30\x9f\x32\x0e\x8d\xd7\x1b\x77\x4e\xc2\xc1\x5e\x7c\x0e\xf5\x5a\xaa\x70\x9f\x90\x51\x54\x76\x08\x65\xc3\x09\x52\x4f\xcb\xf3\xb1\x48\x3f\xfb\xee\x70\xaf\x33\xe7\x6f\x15\x3d\xbc\x91\xc5\xfd\x2d\x24\x49\xf6\x7e\xf1\x51\x28\x82\x3c\x3c\xbc\x99\x97\x39\xa4\x7b\x79\x48\xb5\x54\xbe\x4b\x36\xcc\xa6\x4b\x3f\x5a\xdb\xbe\x7e\xfd\x0d\x00\x00\xff\xff\x50\x72\x6f\x7c\xe6\x04\x00\x00")

func templateEnumTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateEnumTmpl,
		"template/enum.tmpl",
	)
}

func templateEnumTmpl() (*asset, error) {
	bytes, err := templateEnumTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/enum.tmpl", size: 1254, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateNodeTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\xdb\x38\x12\x7f\x96\x3e\xc5\x9c\x90\x2d\xa4\xc0\xa1\x9a\xde\xd3\x79\x9b\x03\x72\x49\x0b\x18\xe8\xb5\xb7\x4d\x71\xfb\x50\x04\xbb\xb4\x34\xb2\x79\x95\x48\x87\xa4\xed\x18\x5e\x7d\xf7\xc3\xf0\x8f\x2d\x3b\x36\xda\xc5\xe1\xf2\x12\x8b\x9c\x3f\x9c\xdf\xcc\xfc\x38\xd2\x76\x5b\x5e\xa6\x77\x6a\xb1\xd1\x62\x36\xb7\xf0\xe6\xf5\xf5\xdf\xae\x16\x1a\x0d\x4a\x0b\xef\x79\x85\x53\xa5\xbe\xc1\x44\x56\x0c\x6e\xdb\x16\x9c\x90\x01\xda\xd7\x2b\xac\x59\xfa\x65\x2e\x0c\x18\xb5\xd4\x15\x42\xa5\x6a\x04\x61\xa0\x15\x15\x4a\x83\x35\x2c\x65\x8d\x1a\xec\x1c\xe1\x76\xc1\xab\x39\xc2\x1b\xf6\x3a\xee\x42\xa3\x96\xb2\x4e\x85\x74\xfb\x1f\x26\x77\xef\x3e\x3e\xbc\x83\x46\xb4\x08\x61\x4d\x2b\x65\xa1\x16\x1a\x2b\xab\xf4\x06\x54\x03\x76\xe0\xcc\x6a\x44\x96\x5e\x96\x7d\x9f\xa6\xdb\x2d\xd4\xd8\x08\x89\x90\x49\x55\x63\x06\x7d\x4f\x6b\x17\x8b\x6f\x33\x18\xdf\xc0\x94\x1b\x84\x0b\x76\xa7\x64\x23\x66\xec\x5f\xbc\xfa\xc6\x67\x18\x64\x2c\x76\x8b\x96\x5b\x84\x6c\x8e\xbc\x46\x9d\xc1\x05\x78\x93\x57\x20\x1a\x90\xa4\xf8\x60\x95\xe6\x33\x64\x1f\x79\x87\x90\x99\xa7\xd6\x39\x48\xb6\x5b\x68\xb8\x68\xbd\x4f\xd0\xf8\xb4\x14\x1a\x0d\x3c\xfc\xf2\x01\x8c\xd7\x08\x07\xb9\x02\x94\xb5\xb3\x2a\xba\x85\xd2\x16\x72\x52\xbe\x02\xcd\xe5\x0c\xe1\x42\xd2\x19\x2f\xd8\x47\x55\xa3\x71\x86\x93\x8c\x0e\xff\xf2\xbc\x25\x2d\xcb\xc1\x42\xe6\xed\x04\xeb\xc5\xd0\x7e\x36\x13\x76\xbe\x9c\xb2\x4a\x75\x65\x13\xd2\x58\xa2\xb4\x65\x2d\x78\x8b\x95\x2d\x29\x8c\x1f\x13\x2b\x4d\x35\xc7\x8e\x1f\x49\xcf\xb9\x99\x8b\x4a\xe9\x45\x39\x53\x57\xdd\xb2\xb5\x02\xb5\x56\xda\x49\xa9\x96\xcb\x19\x53\x7a\x56\x3e\x97\x66\x23\xab\xd2\x60\xc7\x17\x73\xa5\xf1\x8c\x4b\x21\xab\xe5\x94\x5b\xa5\xc9\xf7\x55\xa5\xa4\xd5\x62\x4a\xbf\x67\x74\xca\x22\x4d\xcb\x12\x08\x1f\x0d\x6b\xcd\x17\xc6\x95\xc7\x94\x1b\x51\xb9\x55\xe8\xd0\xce\x55\xcd\x52\xbb\x59\x60\x90\x13\xd2\xa2\x26\xf3\xb0\x4d\x13\x5a\xca\xc9\x2a\x3e\x5b\x82\x95\xfe\x17\x90\x5f\xd2\xfa\x08\xdc\xb9\x8b\xb4\xdf\x79\x89\x05\x38\xd3\x7c\x31\x1f\x58\x05\x63\xf5\xb2\xb2\x64\x71\x72\x0f\x09\x00\xb8\x3c\x4d\xee\xbf\x90\x44\xdf\xc3\xef\xff\x31\x4a\x8e\x33\x51\x8f\x54\x27\x2c\x76\x76\x93\xfd\x0e\x65\x09\xae\x40\x44\xcd\xd2\xc4\x49\x02\x19\x12\x72\x06\x10\x35\xc8\x45\xd0\x59\x38\x25\xd8\xa9\xd1\x16\x4b\x93\xf7\x02\xdb\xda\xc0\xd7\xc7\x4b\xf7\x2b\x2a\x36\x6e\xf9\x40\x35\x2a\xfa\x2d\x96\x26\xef\xea\x19\x1a\x20\x55\xfa\xb5\xf3\x89\xb4\x7c\xe8\x34\xaa\xba\x2d\x16\x10\xf1\xfe\x54\x03\xdc\x6d\x06\x3c\xfc\xea\x1e\x10\x1f\x58\x88\xeb\x6c\x54\x65\xe9\x8f\x15\xa3\x72\x1d\x75\xa4\x25\x79\x77\x4e\x8b\xb6\x20\xe7\x86\x12\xe4\x5d\x17\x2c\x4d\xfe\xcd\xdb\x25\x1e\x19\x59\xd1\xda\x31\x2c\x5e\x44\x34\x02\x6b\x70\x02\x31\x44\x8f\xd0\x14\xed\x1a\x51\x82\x5d\x2b\x17\xa9\x09\xa1\x3a\xd4\x8e\x22\xfd\x6e\x02\xcb\xd2\xa1\x78\x10\xe8\xb1\xd2\x8b\x48\xa3\x12\x6d\x30\x2a\x32\x97\xb6\x73\x45\x76\x26\x79\xa2\x36\x90\xaf\xe7\xa8\xd1\xf3\xa5\xb3\xb8\x50\x42\x5a\xb0\xaa\x70\x21\x13\xe7\x43\xab\xd4\x02\xd4\x0a\x35\xf0\xb6\x75\xe7\x34\xc0\x65\x0d\xbc\xae\x41\x74\x8b\x16\x3b\xba\x02\xa8\x0f\x42\x4f\x84\x86\x62\xe0\x48\x77\xbb\x3d\xcb\x5f\x74\x60\x8d\x15\x0a\x32\x4e\x7b\x92\x7d\x8e\x8f\xb4\xdf\x2c\x65\x05\xf9\x81\x54\xdf\xc3\xa5\x67\x37\x87\x54\xdf\x17\xe0\x9b\xd6\x3e\xc3\xcb\xc6\x75\x71\xee\xbb\x37\x74\x30\x25\x27\x71\x5b\x37\xf0\x8a\x36\xe9\x39\x99\xdc\x8f\xe1\xc8\x15\x9b\xdc\x8f\x68\x8b\x10\x1d\x43\x76\xe0\x37\x73\x3b\xbe\xdb\xc6\xd0\xf1\x6f\x98\xc7\x9e\x1b\x91\x9d\x16\x25\x49\x87\x76\xec\xfb\xc2\xc9\xbb\x02\xda\x8b\xd3\xe3\x50\xda\xd7\x57\x10\x26\x82\x27\xd6\x5e\x0b\x3b\x3f\x30\x45\x86\x56\x5c\xc3\x74\xd9\xc0\xd7\xc7\xe9\xc6\x22\xad\x0c\x2e\x0a\x31\x82\x8b\x26\x00\x7a\xa0\x95\x88\x86\xb4\x3c\x18\x37\x40\x05\xc2\xfe\xc9\xb5\x99\xf3\xf6\x18\x66\xb6\xdd\xc2\x82\x9b\x8a\xb7\x70\xd1\xec\xc0\xfe\xd9\x69\xfe\xe5\x06\xa4\x68\x1d\x8c\x49\x92\x68\xb4\x4b\x2d\x69\xc5\xd9\x75\x8b\xde\x9b\xa3\x01\x7f\x80\xaf\x64\x5e\x40\xdf\x3f\x12\xe8\x6e\x2d\xa8\x7b\x70\x3d\xba\x0d\x0b\xc5\xeb\xd1\x4d\x5c\x3b\xec\x37\x0f\xa0\x4f\x7c\x3f\x8f\x43\xb7\xe4\xd3\x65\xe3\x31\xf6\xce\x07\xf7\xdd\x89\x87\x88\x69\x04\x3c\x42\x2a\x1c\x75\x1e\x36\xd2\x09\x70\x31\x80\x3b\x54\x4f\xa8\xd1\x02\xb0\xa7\xb0\xd4\xd4\x58\xd9\x2f\x4b\xd4\x9b\x0c\xf2\x08\xad\x1f\x16\x0a\xe8\xfb\x9c\x28\x8a\xfe\x1e\x90\x2e\x54\x97\x0f\x74\x78\x0c\x2e\x72\x8f\xe6\xe4\x3e\xca\x0e\x92\x14\x0e\xcc\x1e\x3c\x79\xf4\xbd\xa1\xa6\x28\x62\xda\xff\x74\xde\x5c\x6c\x87\x69\xa3\xa5\xa0\x3c\xb9\x37\x63\x42\x6b\x34\x4c\x62\x36\x38\xf3\x51\xae\x7c\x22\x83\xc0\xe1\xde\x77\xd2\x15\x8f\xe9\x9a\x58\x8a\x36\x4d\x1c\xa7\xc4\x49\xc9\x51\x14\x51\x11\x11\x90\x6b\x6a\xbe\x10\x60\x95\x7b\xae\x5a\x41\xdc\xe4\x87\x3f\xcf\x26\x15\x5c\xde\xb9\xd5\xf3\xc4\x31\x02\x51\x1f\xdd\xd8\xc7\x43\x00\x61\x28\x7d\xb6\xc7\x37\x50\x39\x4e\xd3\x64\x8b\x74\x8b\xf4\x04\xe0\x2f\xd0\xee\xd3\xdd\x1a\x8b\x27\x71\xc3\x05\xd5\x21\x6a\x4d\x6b\x13\xb9\xe2\xad\xa8\x27\xf7\x9e\xa9\xec\x7b\x1a\x85\xdf\xd1\x09\xb6\x7e\x80\x3d\x17\x96\xfe\xf1\xb8\x7e\xf3\x0a\xc7\x04\x59\x63\x83\x1a\xc8\x78\xee\x09\x53\x34\x30\x31\xf1\x0c\x39\xea\xc0\xa3\x89\xaf\xf8\xfd\x60\xc7\x6e\x17\x0b\xf4\x12\x23\xf0\x93\x19\x7b\xe7\xc3\xd9\x69\x8b\xba\x28\x3c\xc3\xf5\x79\x91\x26\x96\x4f\x5b\x34\x03\x38\xfd\x02\xfb\xa0\x78\xed\x41\xad\x58\xad\xa9\x99\x7e\x18\xda\x38\x96\x2b\xbb\xef\x8c\x8f\xcb\x0e\xb5\xa8\x7c\x59\x89\x7a\xb5\x73\x68\xac\xae\x94\x5c\xb1\x5b\xab\x44\xee\xf2\x77\xaa\x63\x86\x6e\xce\x85\x7b\x94\xb6\x10\x64\x22\xea\x67\xf2\x23\xea\x55\x99\x5f\xbf\x7d\xfb\xd7\x37\x70\x05\xd7\x45\x18\xca\x5b\x83\xf1\x48\x41\xea\x84\x50\xe8\x06\xd1\x00\x49\xbd\x85\xd7\xf0\xc7\x1f\xee\xe7\xdf\x6f\xe8\xf2\xc8\x3d\x62\xc5\x0b\x3c\x9a\xce\x32\x57\x30\x4d\x9e\x55\x5c\x12\x1e\x1a\x8d\x6a\x57\x08\x4e\x05\x1a\xad\x3a\xaa\x8b\x9f\x56\x63\xf8\x69\x9d\x51\x8d\x9c\x8c\x63\x5f\xae\x15\x93\xfb\x6a\xf7\x7e\xbf\x8a\xfa\xf9\xd1\x97\xfe\xa9\x8a\x94\xe7\x2b\xd2\x4e\xdb\x40\xe0\xa7\xab\x73\x5f\x9b\xa1\x2e\xcd\x5a\xd8\x6a\xee\xf4\xb6\x07\x6f\x47\xbf\x8d\x4e\x4c\x18\x15\xbd\xd1\x1d\xbf\x0d\xb1\x2f\x74\xe8\x31\x0d\x01\x83\x9a\x3b\xb8\xdd\x99\xe3\xe9\x40\xc9\xbf\xd2\x8c\x94\xbf\xb0\x32\xb9\x77\x75\xcc\x22\x7d\x89\x06\xe6\xdc\x7c\xd9\xbd\x27\x56\xaa\x25\x22\x17\x4a\x66\xe1\x8a\xb8\xf3\x2b\xfe\x46\xf4\xf8\x1d\x0d\x15\x7b\x6b\x3b\xfe\x4b\x3e\xc9\x76\x13\xa9\xfc\x3b\x65\xe9\x69\x7c\xc8\x9a\x81\x32\x87\x16\x6b\x6c\xf8\xb2\xb5\xe3\x1f\xaf\x14\x97\x3f\x5f\x29\xbe\x68\x7e\x7a\x0a\xc5\x62\xa7\xed\x99\x6a\xe9\x53\x3f\x14\xe7\xb1\xbd\x07\x93\x71\xa2\x64\x85\x40\x2f\x7c\xec\x93\xac\x68\x7a\x31\xd8\xc1\xe5\xee\xe5\x8f\xfd\x8a\x62\x36\xb7\x58\xa7\x74\x2b\xd3\xd0\xce\xad\xea\x44\xc5\xdc\x8d\x4f\xd6\xd3\xe4\x69\x89\x5a\x1c\xbf\xbf\x25\x3e\x6d\x27\x2b\x8d\x14\x36\xbb\x5a\xe3\x7a\x66\x46\xb0\xda\xab\x6f\xfb\xc2\x57\x19\x99\x2f\x62\x11\x5b\xb8\x8c\x9d\x15\xc9\xe8\xb4\x65\x3a\x4a\xf8\x5f\x40\xfe\xf5\x31\xfa\xd9\x17\xae\x68\x42\xb3\x50\xb9\x59\xe6\xdf\x2b\x9c\xd1\xe2\xe7\xb8\xf3\x92\xd4\x02\x13\xee\x2c\x16\xbb\x3b\x30\xb1\x8c\x60\x64\xf7\x2a\x8f\x2c\x0d\x96\x11\x90\x37\xb0\x47\xf2\x23\xae\x23\x98\xf9\x75\x01\xfd\x9e\x40\xdd\x29\x0c\x76\xec\xb6\x72\x1f\x24\x7c\x3d\x5e\xbf\x1c\xf1\x4e\xd1\xab\xbf\x1d\xbc\xfe\x67\x6c\x91\x1b\xcc\xaf\x8b\xff\x47\x90\x87\x57\x83\x65\xed\xee\x4e\x88\x70\xef\x22\xba\xd9\x1b\x8e\xae\x1f\xac\xd2\x18\xc9\x71\x48\x62\x03\xbb\x7b\xca\x8a\xa9\x6e\xff\xc7\x54\x6b\xb5\x76\x00\xbc\x32\x4f\x2d\xfb\xac\xd6\x66\xdb\xfb\x82\xdd\xf8\xc2\x73\x77\xce\x53\xcb\xc2\xa4\xe7\x5e\x0a\x7d\xeb\xbf\xd7\xaa\xcb\x69\xcb\x51\x54\xee\x3f\xa8\xb8\x81\xca\x2d\x78\xb6\xf9\xa4\x6b\xd4\xff\xd8\x38\xb9\x5b\x53\xe5\x99\xa8\x33\xbf\x13\x58\x6b\x98\xe3\x70\x52\xb6\xeb\x8c\xd0\x09\xb1\x05\xe8\xac\x7f\x26\xe7\x24\xcf\xee\x5a\x65\x90\xfc\xd0\xac\x12\xd2\x1a\x81\x78\x01\xb1\x8b\xb4\xe2\xf2\xa1\x15\x15\xe6\xa4\x3f\x82\x57\x31\x25\x47\xb3\xdc\xee\xf3\x9c\x9f\xdc\x4a\xff\x6d\xa2\xe4\x75\x2d\x88\x48\x79\xf8\xa2\x56\x96\xb0\x5f\x0a\x1f\x30\xa0\x51\x7a\x37\x00\xee\x48\xc7\xff\x1b\x38\xf9\x6f\x00\x00\x00\xff\xff\x53\x3d\xdc\xda\xc7\x14\x00\x00")

func templateNodeTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateNodeTmpl,
		"template/node.tmpl",
	)
}

func templateNodeTmpl() (*asset, error) {
	bytes, err := templateNodeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/node.tmpl", size: 5319, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatePaginationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x3b\x7f\x6f\xdc\xb8\x72\x7f\x4b\x9f\x62\x4e\x70\xfc\x24\x57\x96\x93\x43\x5b\xe0\xf6\x75\x1f\x60\xd8\xce\xd5\x40\x9e\x93\x3b\xbb\xef\xfe\x08\x82\xb3\x2c\x51\xbb\x6c\xb4\xe4\x46\xe4\xda\xf1\xdb\xe8\xbb\x17\xc3\x21\x25\x4a\xab\xb5\x9d\xa0\x45\x0d\x5c\x6c\x91\xf3\x7b\x86\xc3\xe1\x90\xb7\xdd\x9e\x1c\x85\x67\x72\xfd\xd8\xf0\xc5\x52\xc3\xcf\xaf\xdf\xfc\x72\xbc\x6e\x98\x62\x42\xc3\xdb\xbc\x60\x77\x52\x7e\x86\x4b\x51\x64\x70\x5a\xd7\x60\x80\x14\xe0\x7c\x73\xcf\xca\x2c\xbc\x59\x72\x05\x4a\x6e\x9a\x82\x41\x21\x4b\x06\x5c\x41\xcd\x0b\x26\x14\x2b\x61\x23\x4a\xd6\x80\x5e\x32\x38\x5d\xe7\xc5\x92\xc1\xcf\xd9\x6b\x37\x0b\x95\xdc\x88\x32\xe4\xc2\xcc\xbf\xbb\x3c\xbb\xb8\xba\xbe\x80\x8a\xd7\x0c\xec\x58\x23\xa5\x86\x92\x37\xac\xd0\xb2\x79\x04\x59\x81\xf6\x98\xe9\x86\xb1\x2c\x3c\x3a\x69\xdb\x30\xdc\x6e\xa1\x64\x15\x17\x0c\xa2\x75\xbe\xe0\x22\xd7\x5c\x8a\x08\xda\x16\x67\x34\x5b\xad\xeb\x5c\x33\x88\x96\x2c\x2f\x59\x13\xc1\x01\x10\xd2\x31\xf0\x0a\x04\x83\x83\xec\x5a\xcb\x26\x5f\xb0\xec\x2a\x5f\x31\x88\xd4\x97\xda\x20\x07\xdb\x2d\x54\x39\xaf\x7d\xaa\xd0\xb0\x2f\x1b\xde\x30\x05\xd7\xbf\xbd\x03\x45\x78\x96\xd5\x31\x30\x51\x0e\x68\x4b\x0d\xf1\x32\x57\x37\x9d\x08\x85\xac\x6b\x56\x18\xf1\x92\xe7\x59\x54\x9c\xd5\x25\x78\x38\x63\x3e\x7c\xb5\x96\x8d\x86\x18\xe9\x1c\x43\x93\x8b\x05\x83\x03\x01\xb3\x39\x1c\x64\x57\xb2\x64\xca\xf0\x08\xa2\xed\x16\x0e\xb2\x33\x29\x2a\xbe\xc8\x3e\xe4\xc5\xe7\x7c\xc1\xa0\x6d\x4f\x70\x58\x78\x03\x11\xd1\xb1\xd4\x13\x9f\x7e\xb4\xe0\x7a\xb9\xb9\xcb\x0a\xb9\x3a\xa9\x6c\x58\x9c\x30\xa1\x4f\x4a\x9e\xa3\x74\x27\x68\xb4\x21\xd8\x2f\xbf\x94\x4c\xf1\x85\x50\x27\x8b\x2f\xf5\x82\x89\x93\x45\x93\xaf\x97\x3b\x60\xf7\xec\xb3\xce\x97\x08\xb3\xce\x1b\xc5\x9a\x93\xfb\x9f\xf1\x83\x35\x8d\x6c\xc6\xa0\x2b\xbe\xcc\x79\xcd\x44\x21\x4f\x56\x6a\xb1\xce\x8b\xcf\x27\xf7\xff\x16\xa1\xa4\x27\x27\xf0\xbe\x29\x59\x73\x6e\xe2\x05\xad\x48\x11\xa1\x4c\x28\x95\x6e\x54\x61\x70\x3d\x2c\x79\xb1\x04\x2d\x41\x22\x06\xe4\x50\x73\xa5\x31\xbe\xb8\x66\x2b\x95\x85\xfa\x71\xcd\xc6\xd4\x94\x6e\xb8\x58\x84\x61\x21\x85\x32\x06\xd9\x61\x78\xaa\x0a\x50\x6b\x56\xf0\x8a\x33\x05\xb9\x80\x5c\x15\x4c\x94\x5c\x2c\x88\x4f\x16\x06\xbb\x08\x23\x2e\x30\x87\xe8\xf4\xfa\x2c\x9a\x20\x7f\xce\x86\xf4\xa1\x64\xcf\xd0\x37\x18\x23\x06\x73\x88\xce\x2f\x90\x01\x99\xec\x1f\x79\xcd\x4b\x0c\x4c\x34\x12\x59\xa3\x33\x15\xdc\xe7\xf5\x86\x65\x61\xb5\x11\x05\xc4\x72\x44\x29\xe9\x70\xe3\x04\x8c\xaf\x60\x1b\x06\xbc\x02\x09\x3f\xcd\x27\x2c\x73\x78\x38\x35\x63\x44\xdc\x86\x41\xd0\x30\xbd\x69\x04\x54\x2b\x9d\x5d\x20\xb1\x2a\x8e\x5e\x29\xcc\x25\xb8\x84\x72\x14\x85\x97\x23\xdc\x28\x05\x99\x84\x41\x1b\x3a\x64\xc1\xeb\xb0\x35\x6a\x5d\x1b\x67\x01\x5f\xad\x6b\xb6\x62\x42\x2b\x43\x98\x46\x59\x03\x5c\x68\xd6\x60\x10\xef\x57\x8e\x60\xe3\xc4\xfa\x1d\x65\xb4\x5c\x68\x20\x96\x89\xe5\xf5\xf7\xbc\x51\xcb\xbc\xfe\xf5\xb7\x77\x3e\x3f\x1b\xea\x99\x9d\x7d\x19\xd3\x9e\x54\xfc\x00\x5c\x66\x7f\x34\x5c\xb3\x26\x31\x86\xb5\x5f\x56\xae\x87\x14\xe5\x28\xa4\xb8\xcf\x7e\xdb\x48\xcd\x62\x99\x39\x89\x13\x27\xd8\x7f\x89\xd5\x93\xa2\x75\xf3\xd3\xc2\x1d\x8d\xa5\xf3\xe9\xc5\xf7\x3d\xca\xb6\xf5\x02\x40\xe9\x26\x05\xf9\x19\x33\xd0\x7d\x16\x93\xad\x12\x13\x17\x3f\xc9\xcf\xfb\x3c\x3d\x0e\xbc\x57\x37\xb0\xda\x28\x0d\x77\x0c\x72\x6b\xef\x28\x85\x7b\x72\xf6\x91\x84\x71\x14\x21\x9f\xa4\x73\x90\xcc\xfa\xc8\x44\x53\xec\xb3\x76\xc3\xee\x59\xa3\x30\x7c\x47\x6b\xc4\xc5\xf1\xfc\xb9\x68\xdd\x89\x72\x3f\x1a\x77\x51\x9f\x12\xc6\x98\xe0\xed\x46\x14\x31\xe5\x7c\x6b\x39\x82\xc3\xf1\x97\x4b\x85\xdf\x44\x65\xb0\x3a\x4e\xfb\x51\x27\x47\xb1\x69\x94\x6c\xd4\x8d\xfc\xd0\xb0\x92\x17\xb9\x66\x2a\xee\xbd\x30\xe4\x92\x42\x5e\x69\xd6\xa4\x70\xc7\x2a\xd9\x30\x38\x3a\x33\xc8\x29\xed\x51\x29\xf0\xf2\xed\x40\xf0\x8f\x9f\x90\x45\xac\xe0\x48\x7d\xa9\xb3\x6b\x56\x9b\x5d\xdc\xc4\xf2\x7d\xde\xc0\xba\xe3\xb8\x0f\x72\xb0\xa5\x15\x96\xd9\x81\x5c\x2b\x8c\xad\x92\x17\x1a\x22\x23\x51\x04\xb1\x49\xdf\xd1\xaf\x37\x11\x44\xef\x6e\xa2\x04\x22\x92\xb1\x9b\x79\x87\x33\xbf\xde\xd8\x1d\x17\xcd\x88\x1b\x1f\xd1\x84\xb6\xc5\xb4\x24\x78\x6d\x6c\xb8\x33\x89\xc1\xb4\x61\x03\x90\xa1\x02\x60\xa4\xff\xf8\x89\x14\x4f\x21\xcb\xb2\xc1\xd2\x30\x5a\x75\x06\x36\xf8\xbc\xf2\x82\x7d\xc7\x9f\xa7\xd6\x9d\x41\x10\xf4\x4c\xe6\x80\x64\xce\xe4\x6a\x2d\x15\xd7\x6c\xbb\x05\x2e\x4a\xf6\x95\x0c\xf2\x9a\xf4\x0a\x82\x16\x58\xad\xd8\x77\x62\xbf\xe9\xb0\xc3\x01\x96\x82\x39\xe4\xeb\x35\x13\x65\xdc\x8f\xa5\xb0\xd7\xad\xf8\xa3\xb2\x3f\x96\xac\x61\x3d\x42\x4c\xe3\x81\xca\xce\x64\xbd\x59\x09\x15\x0f\xe3\x25\x49\x2d\xc0\x84\xd1\xd3\x91\x27\x2e\xcf\x2d\x70\x92\x90\xbc\xe6\xd7\x40\xe7\x09\xcf\x38\xbf\xfc\x9f\x39\xe5\x87\x7c\xf1\xff\xe3\x82\xf8\x69\xab\xef\x31\x70\x68\xfe\xf3\x0a\x43\x97\x52\x7a\x99\xec\x96\xf3\x21\x5f\xb0\x4b\x51\x49\xac\xa5\x72\x28\xa4\x10\xd6\x9e\x58\x51\xd9\xba\xaa\x83\x51\xba\xd9\x14\x1a\xc5\xfe\xcf\x5c\x5d\xb1\xaf\x1a\x67\x00\x7f\xee\xa4\xac\xf1\xf7\xed\x7f\x2b\x29\x66\xd1\xb2\x9f\x8e\x6e\x0d\xf4\x87\x86\xdd\x73\xb9\x51\x06\x63\x17\xda\x9f\x46\x8c\x6b\x9d\x37\x9a\xf2\x95\xa1\x6f\x73\x97\xc3\x50\xfd\x34\x42\x5f\x88\xd2\x83\xdd\x81\x66\x6e\x3a\xba\xb5\x5a\xdb\x79\xd4\x59\x00\x2b\x17\xcc\x57\xd7\x4e\xf6\xca\x5e\x9e\x9b\xb0\xce\x2e\xcf\x6f\x70\xbe\x6d\xe1\xd6\x96\xb2\xb3\x88\x23\x7f\x4a\x38\xf4\x2f\xfd\xf4\x00\xf7\xa9\x5c\x61\x91\xba\xd6\x8f\x1d\xfb\x1f\x2e\x40\x0a\x2b\xdc\x93\x85\xc7\x17\x2c\x2f\x30\xe5\x7e\xfc\x74\xf7\xa8\xd9\xf6\x2f\xd1\x5f\xda\x30\x78\x20\x90\xd8\xcc\x26\x61\x50\xb2\x8a\x35\x30\x1e\x7d\x28\x10\xf1\x2e\x57\xec\xdf\xff\x35\xbb\x62\x0f\x17\x02\x4f\x88\x4d\x6c\x47\x7e\xcf\x1f\xae\x75\x69\x06\xcd\x0a\x7d\xe8\x09\x15\xd9\x59\x2d\x71\x6f\x0e\x83\x3f\x61\x0e\x56\x7f\x9f\xc6\x43\x91\x64\xf4\x77\x5c\xfc\xaf\x54\x3c\x85\x73\xf4\x4b\x2b\x9d\xef\xaf\x73\x5e\xdd\xf4\x15\xed\xb8\xac\xe1\x15\x92\x46\x7a\x9e\xb2\xe7\x8c\x94\x0d\x83\xa0\xb7\xa2\x37\x18\x4c\x5b\x12\x67\x88\xbe\x42\x84\xdf\xcd\xb1\x37\x56\x66\xd5\xe3\x3f\x49\x46\x34\xe2\x22\xf9\xab\xe1\xea\xed\x6e\x13\x62\x17\xb9\x40\x99\x4b\x83\x63\x8b\x86\x19\xbc\x7a\x88\x52\x44\x9e\x2a\xc1\xe9\x90\xc4\x9a\xe6\x52\x98\xca\xfd\x43\x7f\xb6\x9d\x43\x74\x79\xf5\x8f\xd3\x77\x97\xe7\x7f\x7e\x38\xfd\xf5\xf2\xea\xf4\xe6\xf2\xfd\x55\x64\x0b\x92\x7b\x5b\xb8\xbd\xe5\x8d\xd2\xef\x72\xa5\xe3\x0a\xff\x4a\xa1\xce\x95\x86\x23\x2e\x74\x02\x31\x0a\x7c\xe4\x0e\x88\x24\xa4\x89\x54\xf5\xc0\x75\xb1\xc4\xbf\x8a\x5c\x31\x30\x98\x4e\xb3\xc3\x43\x22\x41\x9f\xb3\x30\x08\x90\xca\x1c\x0e\x87\x74\x4c\x0a\xfd\x3b\x53\x2a\x5f\xb0\x19\x44\x1f\x72\xa5\xb0\xf8\xbf\x93\x7a\x09\xb7\x86\xe0\x2d\xe4\xa2\x84\x5b\x24\x76\x8b\x27\x48\x7b\x6a\x67\xc3\x74\x67\xbd\xac\x36\x6b\x3c\x3e\xb3\x32\x8b\xd2\x3e\x89\xda\x92\x26\x6f\x16\xe8\x6d\xaa\x50\x0c\xed\x08\x22\xa4\x4b\xad\x07\x52\x02\x33\x05\x02\xf6\x45\xca\xe1\x21\x1c\x79\xa3\xff\x01\xaf\x51\x9b\x27\xd4\xf1\xf4\xb9\xed\x11\x6f\x41\x8a\xa1\xcc\xd6\xcb\x77\x0c\x6a\xa6\xf0\xd4\x9c\x0b\xf8\x27\x6b\x24\xc9\x4e\x3b\x13\x6b\x1a\x8c\x81\xec\x9a\x69\x74\x43\x3a\xe9\xe2\x64\xb8\x57\xf4\xc1\xc1\x9a\xa6\x2b\x3d\x17\x4c\x9f\x51\x5b\x83\xd1\x96\x14\x17\xfa\x2b\x8a\xa3\xd9\x57\x9d\x9d\xd1\xef\x14\xd6\xb9\x5e\x62\x45\xe5\xaa\xca\x23\xb7\x94\x87\xc8\xe8\xf4\xca\x24\x1b\x37\xff\x2b\xd3\x66\xc6\x52\x42\xea\xb4\x3c\xab\x02\x37\xf7\x51\xb4\x63\xd8\xa2\xa0\x72\x4c\xe3\xfd\x9a\x35\x46\xa9\x21\x1d\xaa\xd1\x67\x73\xa8\x8a\xcc\xb0\x09\xc3\x87\xbc\xfe\x3c\x0b\x83\x4a\x36\xf0\x67\x0a\x22\x5f\x99\xa4\x49\xbe\x36\x5a\x20\x3b\x3b\x5b\xf5\x53\x23\x7d\x0c\x31\x15\xcb\xc2\xd6\xd5\x76\x7b\xe7\x52\xa8\x14\xa5\x4c\xba\x22\xb5\xa2\x5e\x15\xea\x82\xbf\xc9\xd5\x24\xd7\x1c\x2a\xf3\x85\xd6\xe4\x62\xc3\x00\x65\xf3\x76\xf2\xb1\xd6\xf6\xf3\xd0\x60\x77\x1e\x5a\xe6\xea\x47\x3c\x64\x76\x63\x3a\xab\x3c\xe5\x8b\x09\x27\xe8\x66\xc3\x7c\x79\x26\x43\x84\x18\x66\x59\x96\xd8\x05\xd1\xa7\x9b\x61\x13\xac\x73\x11\x2d\x30\xdc\x96\x55\x04\x91\x90\x25\x8b\x4c\xb3\xcd\x14\x21\x11\x44\x5a\xea\xbc\x3e\x93\x1b\xe1\x16\x1e\x2e\x12\xc2\x6e\xdb\xb7\xd6\xa0\x91\x3f\xb8\xd3\x25\xdb\x6e\xbb\xd6\x1b\x66\x48\xaf\xfb\x76\x4c\x2d\xc8\x03\x3a\xde\x19\xe7\x76\x32\x1d\xdb\x5e\x9e\x13\xd8\xe0\x21\x81\xcc\x02\xb6\x36\x61\xf0\x0a\x0e\xcc\xe2\xa4\x0c\x8a\x60\x55\x76\xda\x0d\xa8\xec\x42\x68\xdc\xf1\xac\xf4\x5d\xe7\xf1\xa0\xca\xb0\xc4\x30\x75\x7f\xde\xe4\x77\x35\xb3\x65\xa6\xeb\x39\xc6\xeb\x86\x0b\x5d\x41\x64\xa9\xb3\xd2\x76\x1c\x5f\xa9\xec\x95\xea\xce\xe0\x45\x87\x1f\x59\x01\x4d\xe8\x1d\x50\x08\x26\x3d\x5f\xb7\xe4\x83\xb1\xca\xae\x8a\x1d\x8e\x1e\x54\x9d\x8a\x16\x73\xd8\x42\x85\x03\xb7\x8c\x3c\xae\xce\xa2\xa6\xce\x9a\xcd\xc1\xa8\x60\x21\xa3\x8b\x72\xc1\x22\x03\x72\x72\x02\x1d\x54\xdb\x62\x42\xd6\x4b\x46\xc5\x59\xc3\x6c\x7b\x9b\xcc\x29\xe9\xc0\x67\x08\xb4\xad\xad\xda\x7c\xdc\xbe\x74\x43\x9f\x52\xf6\xb5\xd0\xae\x26\x34\x51\x75\x1b\x06\xb6\xd8\xf3\xca\x47\x0b\x50\x78\x15\xa3\xa9\xb9\xa5\x10\x3b\xd2\x9f\x75\xc9\x78\xa0\x83\x81\xed\x75\xf0\x53\xb6\x14\x3a\xe7\x02\xb7\x28\x13\xdf\xb8\x21\x4d\xeb\xe2\x68\xf4\xba\x5c\x18\x84\x8f\x9f\x8e\x7c\x55\x5d\x89\x6b\x16\xcb\x6d\x18\x74\xb5\x7a\xf7\x47\xaf\x52\xb7\x84\x6e\xc3\xe0\xa6\x5b\x43\x58\x2c\xb9\xaa\x95\xe0\xbc\xf5\xd5\xa9\x8f\xb8\x4d\xaf\x7f\xac\x6a\x5e\x30\x2b\xf7\x6b\x78\x03\xdf\xa0\x96\x0f\x58\x80\x0e\x66\xde\x24\xb8\x25\x2f\xf0\xc8\xdf\xad\xab\xb5\xde\x31\xa3\xdd\x89\xd8\xfb\xf5\x8e\x29\x11\xbc\x6d\x81\x09\x0c\x66\x05\x5e\xcb\xbd\xd8\x28\x2d\x57\xfc\x9f\xe6\xcb\x33\x9c\xc5\x30\x27\xae\xa3\x5e\xf4\xd6\x55\x82\x61\xbf\xbc\x77\x04\x31\x27\xc8\x81\xac\xef\x87\x70\xd1\x1f\x5c\x2f\x23\x87\x3e\x94\x93\x40\xdb\x16\x9d\x5c\xf1\xc5\xa6\x19\xca\x6b\x50\xb8\x58\xd8\xea\x75\x84\x14\x13\xc5\xa3\x5e\x36\x14\xd8\xd3\xc7\x36\x93\xcc\x94\x97\x89\x11\xa2\x64\x55\xbe\xa9\x77\x44\x3d\xa7\xe1\x68\x42\xb9\x20\xb0\x84\x60\x07\xdf\x16\x00\x12\x09\x1d\x19\xa8\x2e\xbd\x1b\x93\x92\x35\xa7\x0c\x6b\xe4\xe9\x8b\x62\x99\x75\x47\x71\xaf\xbd\xb7\x53\xbd\xfa\xa5\x06\xed\x75\xa8\x66\x66\xd3\xb8\x07\xd7\x8d\x4d\xc9\x6c\xf7\x74\x22\x60\xe4\xca\x9c\x86\x87\x72\x67\xff\xb4\x31\xfd\x65\xc3\x9a\x47\x3f\x06\x30\x65\xfd\x86\x83\x83\xbc\x25\xd7\xfa\x2d\xaf\xf5\x54\x18\x90\x61\x69\x76\x1c\xb6\x16\x67\x6f\x3c\x54\x66\x7e\x18\x0d\x1d\x4e\x4c\xb3\x5e\x14\x93\xb0\x68\xec\xe1\x77\x4a\xc6\x4f\xc6\xc1\xf2\x7d\x3e\xb3\xec\xe6\x93\x7e\x91\x8d\x39\x94\xc4\x91\xcf\xd7\xa1\xf4\x45\xa8\xe0\x75\x94\x0c\x5c\xe0\xa8\x5a\xd8\x29\x3f\x74\xcb\xd6\x09\xe6\x25\xbc\x89\x25\x81\x85\xdc\x77\x1a\xc6\x79\x5b\xb0\x87\x0f\xc3\x24\x16\x09\xf6\x10\x79\x39\xc8\xf9\xb0\xf3\x48\x87\x82\xeb\x73\xad\x31\xf9\xf6\x46\x76\xfc\x9c\xe0\x8e\x1f\x4a\xde\x65\xcb\x43\x1f\x62\xdb\x76\xd5\xa6\xcd\x82\x54\x48\x18\xd2\xa3\xc5\xb3\xd6\xe4\xb5\xfd\x0b\x46\xf0\x3a\xed\x57\x0d\x9d\x47\x07\x91\xdf\xa3\x0c\x17\xc4\xbe\x25\xef\x5a\x44\x08\x9c\xba\x42\x8d\x4e\xda\xeb\x71\xf0\xe4\xeb\x75\xfd\x48\xd1\x1a\x93\xc1\x5f\xe4\x0b\x9b\xc5\xd6\x2e\x32\x76\x4f\xb1\x6e\x8a\xa8\x0e\x4e\xaa\x66\xa4\x13\x0c\xc9\x37\x7d\xa5\xf1\x3b\x2b\x18\xbf\xb7\x39\x79\x8f\xd0\x5a\xd2\x36\x1f\x13\x6e\xdb\x0e\x2a\x83\xc4\x15\x01\xfd\xe2\x59\x93\xcd\x28\xb9\x64\x3b\xe8\xc9\x73\x06\x22\x78\x35\x65\xa1\x3d\xcd\xf9\x64\x08\x65\x4e\x49\x14\x31\x7d\x3b\xb2\x8b\x9b\xa9\xcb\x00\xf4\xb6\x95\x7a\xdf\x45\x40\xea\xc1\x90\x66\xb6\xc1\xbb\x37\xaf\x5a\x80\x30\xa0\xc3\x0c\x49\x37\x27\x87\x8c\x7b\x97\xbb\x2e\x7b\xce\x4a\x86\xd7\xb4\x8d\xec\x85\x8f\x39\xa2\x4c\x98\xa6\xef\xfe\xe2\x9a\x1e\xab\x6d\x42\xcd\x51\x40\xb9\xbd\x66\x71\xdf\x38\xce\xba\x4b\x25\x23\xf8\x50\x37\x12\xad\x87\xed\xef\x7c\x26\x0c\x98\x24\x36\xb8\xbd\x19\x8c\xf0\xbd\x66\x9d\x30\x26\x31\x3c\x55\x45\xfc\x8c\x33\x92\x69\x3b\x53\x47\x97\xfa\x1b\xec\x2b\x2b\x36\xda\x5e\xa7\x13\x9b\x5c\x94\x40\x28\x0a\x72\x68\x58\x9d\x3f\x9a\x66\x5f\x69\x63\x69\xd0\x00\x1e\x55\xa6\xe4\xc2\xe1\xd2\xe9\xd7\xbb\xe3\x1a\x87\xc1\xe4\xa1\xd3\x44\xa0\x7f\x05\xd5\xd8\xf6\x50\x1a\x06\xe3\xfb\xa9\xae\x75\x94\x52\x6a\xcc\xb2\xac\x4f\xbb\x69\xe8\x92\x8b\xad\x90\x47\xb9\xc5\x26\xd0\x27\xfb\x52\x7b\x7b\x68\x7d\x4e\x6d\x6d\x12\x4f\x1d\xc1\xa9\xfd\x20\xe9\x38\x3e\x4d\x2a\x74\x77\x54\xdd\x3e\x01\x73\x9b\xab\xfd\x44\xda\xe5\x95\x97\x88\x17\x06\xee\x44\x72\xe8\x19\x63\x6b\x0e\x09\xb3\xd1\x29\x61\xdb\xd2\xf6\xf0\xd3\x64\x87\x20\xa5\xa3\x08\x5d\x33\xc0\xb7\x6f\x61\x10\x8c\x3b\x71\x47\x34\x30\x9f\xc3\x6b\x02\xf0\x5a\x73\x66\xde\x7c\x9b\x69\xbb\x8f\xed\xe1\xd4\x1f\x2d\x7c\x76\xc1\x1e\x68\x77\x60\xb1\xb0\x66\xf7\x2b\x10\x79\xe0\x15\xb3\x34\x0c\x4d\xdb\xeb\x09\x26\xbc\x32\xb5\x6d\x52\x87\x0c\x2d\x97\x79\xc7\xa1\x39\x18\x16\xdd\x94\x3b\x48\x65\xfe\x9d\xc7\x7c\xa7\x59\x69\x90\xe0\x6f\xf0\x7a\x12\x71\x70\xfd\x31\x87\x91\xf9\x7c\x5c\xaf\xdb\x83\x54\x52\x57\x2b\x19\x07\xc6\xb4\x8c\x2c\xe6\xb7\x6f\x43\x29\xbe\x7d\x73\xbb\x49\x3f\xe0\x71\x4a\xe0\xf0\x30\xdc\x6b\xeb\x1d\xcf\xa0\xd5\xf6\x19\xbb\x96\x82\xc5\xc9\xd0\xe8\x13\x36\x9f\xac\x54\xf6\x1b\x1c\x95\xec\xf2\xcb\x60\x81\xb8\x8d\xb4\x5f\x43\x83\x1d\x2d\xd9\x87\x47\xe9\xb4\xc7\xf2\xad\x41\xb7\xda\x35\x5f\x71\x73\x04\xa6\x56\xa3\x6f\x4e\x54\x81\xa6\xe7\x76\x01\xfc\xcb\x9b\xd0\x5d\x12\xf2\x6a\xe0\xc4\x01\x2c\x4e\x18\x50\x43\x93\x86\xff\x66\x97\x86\x27\x67\x67\xce\x77\x08\x11\x1b\xb8\xa4\x73\x75\xd7\x0d\xdb\xd3\x54\xeb\xd7\x6c\x0a\x58\x01\x91\xd7\xfe\x6a\xf1\x7e\x1a\x9e\x10\xc7\x1c\x0b\xaf\x77\x19\x3f\xd7\x3c\x4d\x51\x7b\xf7\x36\x21\x0c\x90\x99\xda\x8d\x89\xd3\xba\xee\x5b\xb6\x5e\x20\x60\x0c\x32\x11\x1b\xac\xa4\x4f\x11\x83\x10\xf7\xd3\xe4\x10\x98\x8c\xb7\x0d\x5f\xbe\x16\xa7\x40\xf7\xaf\xbe\x30\x20\x7d\x60\x6e\x8c\xa8\x3e\xce\x7a\xfe\xc7\x6f\x3e\x91\x54\x18\x27\x38\x74\xaa\xe9\xd8\x61\x2e\x35\xfc\xd2\x91\x04\x1f\x85\x83\xc9\xcd\x9e\x36\xc7\xf0\xc6\x72\x3b\xc5\x28\x21\x4a\xb0\x43\x6b\xb8\x72\x8c\x4c\xe2\x98\x7f\xb2\x55\x7e\x7f\x43\xfd\x23\x84\x3a\x32\x76\xf7\xc8\xa8\xa5\x34\x87\x55\xfe\x99\xc5\xc3\x3d\x23\xf5\x64\x4f\xa8\x0a\xe5\x7d\xe9\x49\x46\x73\x72\xe0\x38\xc9\x13\xf3\xc4\x39\xc0\xd0\xfe\xc8\x3f\x81\xdd\xa1\xdc\x5e\x84\x52\x5d\xc9\x92\xcd\x0c\x8a\xb9\xa9\x38\xb3\x17\x54\xb4\x72\xbb\x3a\x1b\xe7\x93\x74\x24\x72\xe7\x57\xff\x8a\x78\x0e\x87\x1e\xcf\xd7\x9f\x32\x1a\x1f\xa3\xf4\xf7\xc4\x43\x04\xd4\xb4\xff\x44\xc7\x77\x04\x78\x05\x3b\xf9\xca\xc5\xf0\x6e\x22\xeb\x4d\x46\x12\xef\x24\xf2\x36\x1c\x35\x97\xa7\x5b\x50\x66\x2a\xea\xfa\xcd\xbc\x1a\xb6\x61\x31\xe2\x30\x28\x63\xdb\xc5\x1d\xf4\xa3\xc7\x80\x04\x72\x80\xf0\x3d\x2f\x4f\x80\x83\x2a\xbb\x36\x47\xee\xb7\xb6\x59\x8e\x28\xb6\x8d\x81\x48\x6d\x4b\x5d\x27\xe5\x97\x83\x70\xf7\x68\x3e\xed\x9d\x06\xd6\x87\xf6\x6d\x82\x45\xb1\x4e\xf7\xf8\x58\xd7\xd3\x8d\xc7\x8c\x88\xe1\xc9\xad\x7f\xcb\x9a\x11\xc5\x33\x29\x94\xce\x05\x15\x7b\x88\xe1\x02\x62\x46\xb1\xfe\xec\xe9\xcd\xdb\xed\x69\xd0\x8e\x05\x97\xe7\xb3\x3e\x61\x75\x4f\x27\xe8\xfa\xde\x9b\x21\x31\x86\x46\xb1\xb0\xf6\xcd\x47\x77\xbf\xe6\xf7\xd0\x93\xd0\xbc\x01\x1d\xbf\x64\xdc\xfb\x90\x31\xa0\x8a\x9a\x2a\xc3\x81\xa1\x26\x1f\x33\x1a\x8f\x2b\xdd\xb8\x77\xad\x81\xbb\x3e\xad\xe8\x44\x40\x9a\xbf\x20\x1c\xfa\x7b\xca\x67\xed\x3f\xb3\x0f\x54\x74\xd3\xdd\xa8\x4c\x5c\x63\x64\xef\x7d\xe1\x23\x27\x46\x77\xb7\xe0\x95\x34\x4a\xdb\x4c\xff\x63\xaf\x20\x9e\x32\xd9\x13\x2f\x22\x9e\x7d\x8b\x59\xf9\x6f\x31\x9d\x7c\x3f\xf8\x36\xa1\x93\xf1\x68\x42\xc8\x17\xbd\x53\xd8\xf7\x24\xd3\x7f\xab\x30\x75\xeb\xbf\xc3\xef\x89\x67\x99\xc6\x29\x36\x80\xd0\xbd\xdf\x17\x3c\x2f\x0d\x05\x1b\x3f\x47\x15\x96\x45\xdb\xed\x4b\xb3\xcf\x20\x7a\xec\x21\x78\xb6\x47\xe9\xdd\x37\xc7\x3b\x66\x88\x8c\xbb\x93\xc9\xab\x54\xff\xfe\xca\xf5\x6e\x07\x26\xf4\xdf\xa4\xbb\x16\xbe\x2d\xb2\xdc\x3d\x54\x77\xd3\x35\xb8\xc0\x19\x92\xe9\xbb\x9a\xfe\x6b\xd1\xb0\xcb\x6d\x5e\x43\x73\x94\xd1\xc2\x91\x64\x7b\x85\x7a\x81\x38\x43\x49\xce\xf7\x3c\x1c\x75\xf7\x40\x5d\xdf\x23\xba\x0d\x03\xd2\x64\x37\xa6\x1d\xb0\x51\xab\x7b\xe1\x34\xd1\xbd\x70\xb7\x61\x76\xf8\x19\xb9\x31\xd9\x4d\x11\xf1\xf7\x15\xda\x52\x3a\xb1\x67\xbb\x0f\x00\x53\x2b\xf7\x6c\xcf\x6e\xf4\xcc\x5e\x64\xc6\x2e\xcf\xc7\x3b\xd2\xf7\xef\x47\xc3\xdd\x68\xb4\x0d\x99\x14\x99\x86\xf8\x9f\xfd\xff\x50\xba\xbb\x55\xf7\xd7\xff\x04\x00\x00\xff\xff\x06\xba\x13\xc6\xf2\x33\x00\x00")

func templatePaginationTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatePaginationTmpl,
		"template/pagination.tmpl",
	)
}

func templatePaginationTmpl() (*asset, error) {
	bytes, err := templatePaginationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/pagination.tmpl", size: 13298, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatePagination_testTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x7f\x6f\xdb\x36\x10\xfd\x5b\xfa\x14\x07\x22\x58\xe5\xc0\x61\x12\xb7\x01\xd6\x00\x06\xd6\xc6\x5e\xe1\xa1\x35\xd6\x35\x2d\xb0\x05\x45\x41\x51\x27\x89\x88\x4c\xaa\x47\x2a\xad\x21\xe8\xbb\x0f\x47\x39\x5b\xd6\x78\x1e\x86\xfe\x61\x43\xba\x77\x3f\xde\xbd\x47\xaa\xef\x4f\x8f\xd3\x2b\xd7\x6e\xc9\x54\x75\x80\xd9\xd9\xf9\xf3\x93\x96\xd0\xa3\x0d\xf0\xb3\xd2\x98\x3b\x77\x0b\x2b\xab\x25\xbc\x68\x1a\x88\x49\x1e\x18\xa7\x3b\x2c\x64\x7a\x5d\x1b\x0f\xde\x75\xa4\x11\xb4\x2b\x10\x8c\x87\xc6\x68\xb4\x1e\x0b\xe8\x6c\x81\x04\xa1\x46\x78\xd1\x2a\x5d\x23\xcc\xe4\xd9\x3d\x0a\xa5\xeb\x6c\x91\x1a\x1b\xf1\xd7\xab\xab\xe5\xfa\xdd\x12\x4a\xd3\x20\xec\x62\xe4\x5c\x80\xc2\x10\xea\xe0\x68\x0b\xae\x84\xf0\x60\x58\x20\x44\x99\x1e\x9f\x0e\x43\x9a\xf6\x3d\x14\x58\x1a\x8b\x20\x5a\x55\x19\xab\x82\x71\xf6\x53\x40\x1f\x04\xec\xf0\xa3\xf6\xb6\x82\xcb\x39\xe4\xca\x23\x1c\xc9\x2b\x67\x4b\x53\xc9\x5f\x95\xbe\x55\x15\x72\x52\xdf\x9f\xc0\x17\x13\x6a\xc0\xaf\x01\x6d\x01\x47\x20\x76\xa8\x80\xac\x25\x63\xc3\xd8\x43\x8c\x7d\x27\x5c\x93\xf4\x3d\x04\xdc\xb4\x8d\x0a\x08\xa2\x46\x55\x20\x09\x90\xf7\xed\xb8\x0d\x8f\x37\x9b\xd6\x51\x80\x2c\x4d\x44\xbe\x0d\xe8\x45\x9a\x08\x1f\x48\x3b\x7b\xc7\x8f\xdc\xcf\xd8\x4a\xa4\x69\x22\x98\xe9\x63\x72\x9c\x55\x99\x50\x77\xb9\xd4\x6e\x73\xea\x03\x61\xd0\x35\x9d\xc6\xca\x72\x7b\xaa\xbc\x47\x0a\x22\x9d\xa4\x69\xd9\x59\x0d\xd7\xe8\xc3\x55\x47\xde\xd1\xd2\x6a\x57\x18\x5b\x65\x01\x8e\x77\x73\xe4\xf5\x04\xfa\x34\x09\xf2\xb7\xce\x66\x22\x26\xe0\x02\xf9\x5f\x4c\x81\xcb\x1f\xe7\x26\xda\x59\x1f\x17\x48\x12\x53\xc0\x1c\xfa\x1e\x4c\x09\x47\x72\xb5\xb8\xde\xb6\x28\xd7\xdd\x06\xc9\x68\x18\x86\x67\xb3\xbe\x07\x6c\x7c\x64\xfd\x6c\xc6\xfb\xec\x54\x48\x92\xe4\x4e\x35\x1d\xc2\x1c\x44\xe9\x5c\xae\x48\x70\xec\x73\xe7\x02\xc7\x3a\x63\xc3\x8f\xd9\x13\xf1\x64\x92\x26\x09\xff\xee\x14\x41\xde\x95\x10\x15\x93\x2f\xbb\xb2\x44\x62\x26\x6c\xe2\xbd\x9f\xc3\x20\xc7\x35\xfb\xd5\xe2\x12\x4c\x31\x85\x0f\x3c\xe2\x12\xc6\x49\x3c\x54\xcb\x37\x8a\x7c\xad\x9a\x57\x6f\x5f\x67\x3f\xe4\x5d\xc9\xbd\x7d\x3c\x09\x5d\x29\xdf\x05\x62\x71\x38\x36\x6a\x28\x97\x9f\x3b\xd5\x64\x61\x0a\x91\xd8\x14\xfc\xcd\xd9\x47\x86\x2d\x97\x34\x68\x33\x3f\x81\x13\x38\x3f\x54\x60\x63\x81\x86\x7d\x3c\x99\x12\x12\x71\x33\x2d\xdf\xdb\xcd\xdf\xdc\xfc\xcd\xf9\xe5\x58\xb9\x6b\xbc\x76\x4b\x22\x47\xdc\x1a\x89\xf6\x51\xe4\x85\xb5\x5c\x2d\xf6\x61\x51\x01\x86\xa3\x22\x93\x34\x19\x26\xdf\x78\xbe\x76\x11\xfa\x2f\xd3\x0f\xfb\x7d\x71\xf1\xc0\xef\x8b\x8b\x7f\xf8\xfd\xff\x1c\x84\xd1\xc2\x03\xa6\x45\x1d\xb8\x78\x77\x77\xe4\x7b\x1b\x35\xcf\x1e\x3a\x79\x50\xc0\xc3\x9e\x3c\xb6\xe4\x7b\xdd\x58\x9b\x88\xec\x35\x61\xbc\x72\x2f\x55\xb1\xb2\x6d\x17\xfe\xdd\x05\xc3\x70\x3c\xb0\x37\x1f\x8d\x0d\x48\xa5\xd2\xd8\x0f\x0c\x25\x67\x5f\x73\x55\xe4\x88\xe5\x94\xdf\x84\x8e\xfb\xfc\x94\xab\xe2\x7c\xf6\x54\x8c\xb1\xdf\x9f\x7e\xd8\xea\xd9\xf3\xed\xdb\x57\xbf\xd4\x7f\x2c\x96\xdb\x37\x5f\xe6\xf3\x08\xf1\xd6\xa5\x23\xf8\x34\x85\x38\x82\x27\x90\xb2\x15\xc2\x6e\x62\x3f\x5e\x59\x02\xfd\x58\x33\x86\xf6\x1f\xe3\x58\xcc\x12\xfc\xa5\xcf\x37\xb2\x0d\x51\x05\xfe\x40\xde\x9f\x94\x3f\x03\x00\x00\xff\xff\x71\x15\x8f\x1b\x82\x06\x00\x00")

func templatePagination_testTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatePagination_testTmpl,
		"template/pagination_test.tmpl",
	)
}

func templatePagination_testTmpl() (*asset, error) {
	bytes, err := templatePagination_testTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/pagination_test.tmpl", size: 1666, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTransactionTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\xc1\x6e\xdb\x3a\x10\x3c\x8b\x5f\x31\x4f\xc8\xc1\x0a\x1c\x3a\x2f\xb7\x06\xf0\x21\x30\x12\x20\x40\xe0\xa2\x88\x7f\x80\x21\x57\x31\x51\x99\x54\x96\xeb\xc4\x81\xe0\x7f\x2f\x44\x49\xad\xeb\x02\xbd\xf4\x22\x81\x3b\x3b\x33\xdc\x21\xd9\x75\x8b\x4b\xb5\x8a\xed\x27\xfb\xd7\xad\xe0\xe6\xfa\xff\x2f\x57\x2d\x53\xa2\x20\x78\x30\x96\x5e\x62\xfc\x8e\xc7\x60\x35\xee\x9a\x06\xb9\x29\xa1\xc7\xf9\x9d\x9c\x56\x9b\xad\x4f\x48\x71\xcf\x96\x60\xa3\x23\xf8\x84\xc6\x5b\x0a\x89\x1c\xf6\xc1\x11\x43\xb6\x84\xbb\xd6\xd8\x2d\xe1\x46\x5f\x4f\x28\xea\xb8\x0f\x4e\xf9\x90\xf1\xa7\xc7\xd5\xfd\xfa\xf9\x1e\xb5\x6f\x08\x63\x8d\x63\x14\x38\xcf\x64\x25\xf2\x27\x62\x0d\x39\x31\x13\x26\xd2\xea\x72\x71\x3c\x2a\xd5\x75\x70\x54\xfb\x40\x28\x85\x4d\x48\xc6\x8a\x8f\xa1\xc4\xf1\xd8\x43\x42\xbb\xb6\x31\x42\x28\xb7\x64\x1c\x71\x89\x0b\x0c\xac\x2b\xf8\x1a\x81\x70\xa1\x9f\x25\xb2\x79\x25\xbd\x36\x3b\x42\x99\xde\x9a\x4c\x06\x80\xae\x43\x6d\x7c\xf3\x9b\x32\x98\xde\xf6\x9e\x29\xe1\xf9\xdb\x13\xd2\xc0\x1d\xed\xae\x40\xc1\x65\x7d\xbf\x6b\x23\x0b\x66\xaa\x28\x6d\x0c\x42\x07\x29\x55\x51\x3a\x23\xe6\xc5\x24\x5a\xa4\xb7\x66\xe1\xd8\xbf\x13\xf7\x65\x62\x8e\x9c\x4a\x55\x29\xb5\x58\xe0\x6b\x4b\x61\x73\x40\x6c\x29\x24\x18\x9c\x5a\x9b\xe0\xc0\x24\x7b\x3e\x47\x4c\xd3\x33\x47\x27\x98\x26\x86\x57\x7c\x78\xd9\xe6\x2c\x2d\x93\x11\x72\xa7\xfd\x5a\xd5\xfb\x60\x31\xb3\xb8\x5c\x35\x9e\x82\x54\xa3\xed\xcc\xca\x61\xd2\xd1\xab\xe1\x5f\x61\x76\x56\x99\x63\xd8\xbc\xde\x1c\xe6\xc8\xbb\xaf\xd0\xa9\x42\x86\x15\x6e\x97\xb0\x7a\xd0\xaa\x54\xe1\xeb\x5c\xfc\x6f\x89\xe0\x9b\xbe\xad\x18\x46\xe8\x97\xf3\xe1\x43\xcc\xaa\x38\xaa\xa2\x37\x5f\x62\x4d\x1f\x9b\xc3\xe8\xd4\x6b\xcc\x91\x75\x7e\x82\x67\x90\x1e\x26\x98\x55\x95\x9a\x94\x47\x24\xab\xab\xe3\x49\xaa\x0f\x1c\x77\x23\x3d\x07\x7c\x9a\x49\x42\xcd\x71\x07\x9b\xd5\xf2\xc1\x92\xeb\xaf\xe3\x34\xfb\x10\xd9\x1f\x3a\xff\x94\xd8\x68\x76\xbb\xc4\x99\xe2\x90\xdb\x08\x2f\xff\x1e\x5d\xe4\xa4\xd7\xf4\x31\x2b\x43\x9c\x18\x46\xa4\x7f\x73\x0e\x12\xa7\xbd\x95\x55\x8e\x78\x4a\x28\xf7\xe9\x5f\x87\x5e\xa9\xe1\x2d\x8d\x17\xf8\x47\x00\x00\x00\xff\xff\xfd\x7b\xf0\xa3\x1a\x04\x00\x00")

func templateTransactionTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateTransactionTmpl,
		"template/transaction.tmpl",
	)
}

func templateTransactionTmpl() (*asset, error) {
	bytes, err := templateTransactionTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/transaction.tmpl", size: 1050, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/collection.tmpl":      templateCollectionTmpl,
	"template/enum.tmpl":            templateEnumTmpl,
	"template/node.tmpl":            templateNodeTmpl,
	"template/pagination.tmpl":      templatePaginationTmpl,
	"template/pagination_test.tmpl": templatePagination_testTmpl,
	"template/transaction.tmpl":     templateTransactionTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"collection.tmpl":      &bintree{templateCollectionTmpl, map[string]*bintree{}},
		"enum.tmpl":            &bintree{templateEnumTmpl, map[string]*bintree{}},
		"node.tmpl":            &bintree{templateNodeTmpl, map[string]*bintree{}},
		"pagination.tmpl":      &bintree{templatePaginationTmpl, map[string]*bintree{}},
		"pagination_test.tmpl": &bintree{templatePagination_testTmpl, map[string]*bintree{}},
		"transaction.tmpl":     &bintree{templateTransactionTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
