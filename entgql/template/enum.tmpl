{{/*
Copyright 2019-present Facebook Inc. All rights reserved.
This source code is licensed under the Apache 2.0 license found
in the LICENSE file in the root directory of this source tree.
*/}}

{{/* gotype: entgo.io/ent/entc/gen.Type */}}

{{ define "import/additional/graphql-enum" }}
	"github.com/99designs/gqlgen/graphql"
{{ end }}

{{ define "meta/additional/graphql-enum" }}

{{ range $f := $.EnumFields }}
	{{ $enum := trimPackage $f.Type.String $.Package -}}
	{{- if not $f.HasGoType }}
		// MarshalGQL implements graphql.Marshaler interface.
		func (e {{ $enum }}) MarshalGQL(w io.Writer) {
			io.WriteString(w, strconv.Quote(e.String()))
		}

		// UnmarshalGQL implements graphql.Unmarshaler interface.
		func (e *{{ $enum }}) UnmarshalGQL(val interface{}) error {
			str, ok := val.(string)
			if !ok {
				return fmt.Errorf("enum %T must be a string", val)
			}
			*e = {{ $enum }}(str)
			if err := {{ $f.Validator }}(*e); err != nil {
				return fmt.Errorf("%s is not a valid {{ $enum }}", str)
			}
			return nil
		}
	{{- else }}
		var (
			// {{ $enum }} must implement graphql.Marshaler.
			 _ graphql.Marshaler = (*{{ $enum }})(nil)
			// {{ $enum }} must implement graphql.Unmarshaler.
			 _ graphql.Unmarshaler = (*{{ $enum }})(nil)
		)
	{{- end }}
{{ end }}
{{ end }}
